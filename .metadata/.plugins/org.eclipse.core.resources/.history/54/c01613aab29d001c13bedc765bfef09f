/**
 * 
 */
package com.cultural.bites.controller;

import java.util.List;


import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.cultural.bites.exception.ResourceNotFFoundException;
import com.cultural.bites.model.Post;
import com.cultural.bites.repository.PostRepository;
import com.cultural.bites.service.PostService;


/**
 * @author siddi
 *
 */
@RestController
@RequestMapping("/communityposts")
public class PostController {
	@Autowired
	private PostService postService;
	@Autowired
	private PostRepository postRepo;
	
	@PostMapping("/add")
	public String add(@RequestBody Post post) {
		postService.savePost(post);
		return "Post successyfully added!";
	}
	
	@GetMapping("/getAll")
	public List<Post> getAllPosts(){
		return postService.getAllPosts();
	}
	
	@PutMapping("/edit/{id}")
	public ResponseEntity<Post> updatePost(@PathVariable int id, @RequestBody Post post){
		Post toBeUpdated = postRepo.findById(id).orElseThrow(() -> new ResourceNotFFoundException("Post not found"));
		toBeUpdated.setPost(post.getName());
		toBeUpdated.setPost(post.getSubject());
		toBeUpdated.setPost(post.getPost());
		Post updatedPost = postRepo.save(toBeUpdated);
		return ResponseEntity.ok(updatedPost);
	}
	
	@DeleteMapping("/delete/{id}")
	public Integer DeletePost(@PathVariable Integer id) {
		return postService.deletePost(id);
		
	}
		
}
